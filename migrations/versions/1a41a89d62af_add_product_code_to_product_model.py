"""Add product_code to Product model

Revision ID: 1a41a89d62af
Revises: 915e3dbc2b5f
Create Date: 2024-10-12 02:02:14.987186

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1a41a89d62af'
down_revision = '915e3dbc2b5f'
branch_labels = None
depends_on = None


def upgrade():
    # Check if the column already exists before adding
    conn = op.get_bind()
    result = conn.execute(sa.text("PRAGMA table_info(products);"))
    columns = [row[1] for row in result.fetchall()]

    if 'product_code' not in columns:
        # Add the column as nullable first
        with op.batch_alter_table('products', schema=None) as batch_op:
            batch_op.add_column(sa.Column('product_code', sa.String(length=10), nullable=True))

        # Set default values for existing rows
        op.execute("UPDATE products SET product_code = '' WHERE product_code IS NULL")

        # Alter the column to be NOT NULL and create unique constraint
        with op.batch_alter_table('products', schema=None) as batch_op:
            batch_op.alter_column('product_code', nullable=False)
            batch_op.create_unique_constraint('uq_product_code', ['product_code'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint('uq_product_code', type_='unique')  # Specify constraint name
        batch_op.drop_column('product_code')

    # ### end Alembic commands ###
